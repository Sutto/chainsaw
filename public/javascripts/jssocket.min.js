function jsSocket(c){if(this instanceof arguments.callee){if(typeof this.init=="function")this.init.apply(this,c&&c.callee?c:arguments)}else return new arguments.callee(arguments)}jsSocket.swf="/flash/jsSocket.swf";jsSocket.sockets={};jsSocket.callback=function(c,b,a){c=jsSocket.sockets[c];c.callback.apply(c,[b,a])};
jsSocket.prototype={num:null,id:null,wrapper:null,sock:null,host:null,port:null,sizedReads:false,init:function(c){var b=this;for(key in c)b[key]=c[key];if(!b.port)b.autoconnect=false;if(!b.num){if(!jsSocket.id)jsSocket.id=1;b.num=jsSocket.id++;b.id="jsSocket_"+b.num}jsSocket.sockets[b.id]=b;window.onload=function(){var a="id="+b.id+"&sizedReads="+b.sizedReads,d=document.createElement("div");d.id="jsSocketWrapper_"+b.num;d.style.position="absolute";d.innerHTML='<embed id="'+b.id+'" width="1" height="1" flashvars="'+
a+'" autoplay="false" wmode="transparent" bgcolor="#ffffff" pluginspage="http://www.adobe.com/go/getflashplayer" type="application/x-shockwave-flash" src="'+jsSocket.swf+'" style="display: block;"/>';document.body.appendChild(d)};window.onbeforeunload=function(){b.close()}},loaded:false,connected:false,debug:false,autoconnect:true,autoreconnect:true,keepalive:function(){this.send({type:"ping"})},keepalive_timer:null,reconnect:function(){this.log("reconnecting");this.reconnect_interval&&clearInterval(this.reconnect_interval);
this.reconnect_countdown*=2;if(this.reconnect_countdown>48){this.log("reconnect failed, giving up");this.onStatus("failed")}else{this.log("will reconnect in "+this.reconnect_countdown);this.onStatus("waiting",this.reconnect_countdown);var c=0,b=this;this.reconnect_interval=setInterval(function(){var a=b.reconnect_countdown-++c;if(a==0){b.log("reconnecting now..");clearInterval(b.reconnect_interval);b.autoconnect=true;b.remove();b.init()}else{b.log("reconnecting in "+a);b.onStatus("waiting",a)}},1E3)}},
reconnect_interval:null,reconnect_countdown:3,open:function(c,b){if(c)this.host=c;if(b)this.port=b;this.host=this.host||window.location.hostname;this.port||this.log("error: no port specified");this.onStatus("connecting");return this.sock.open(this.host,this.port)},connect:function(){this.open.apply(this,arguments)},send:function(c){if(typeof c=="object")if("JSONstring"in window)c=JSONstring.make(c);else if("JSON"in window)c=JSON.stringify(c);return this.sock.send(c)},write:function(){this.send.apply(this,
arguments)},close:function(){this.autoreconnect=true;this.loaded&&this.connected&&this.sock.close()},disconnect:function(){this.close.apply(this)},remove:function(){delete jsSocket.sockets[this.id];this.loaded&&this.connected&&this.sock.close();var c=document.getElementById("jsSocketWrapper_"+this.num);c.parentNode.removeChild(c)},log:function(){if(this.debug){arguments.slice=Array.prototype.slice;var c=arguments.slice(0);this.logger&&this.logger.apply(null,[[this.id].concat(c)])}},callback:function(c,
b){var a=this;setTimeout(function(){switch(c){case "onLoaded":a.log("loaded");a.loaded=true;a.sock=document.getElementById(a.id);a.autoconnect&&a.connect();break;case "onOpen":if(b==true){a.log("connected");a.connected=true;if(a.keepalive)a.keepalive_timer=setInterval(function(){a.keepalive.apply(a)},6E4);a.reconnect_countdown=3;a.reconnect_interval&&clearInterval(a.reconnect_interval);a.onStatus("connected")}else{a.log("connect failed");a.autoreconnect&&a.reconnect()}break;case "onClose":a.connected=
false;a.log("disconnected");a.onStatus("disconnected");if(a.keepalive&&a.keepalive_timer){clearInterval(a.keepalive_timer);a.keepalive_timer=null}a.autoreconnect&&a.reconnect();break;case "onData":a.log("got data: ",b)}a[c](b)},0)},onLoaded:function(){},onOpen:function(){},onClose:function(){},onStatus:function(){},onData:function(){}};
