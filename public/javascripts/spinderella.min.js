Array.prototype.remove=function(a,b){b=this.slice((b||a)+1||this.length);this.length=a<0?this.length+a:a;return this.push.apply(this,b)};var Spinderella=function(a,b,c,d,e){this.host=a;this.port=b||42340;this.channels=c||[];this.identifier=d;this.buffer="";this.onMessage=e||function(){}};Spinderella.log=function(){};Spinderella.Util={loadJS:function(a,b){Spinderella.log("loading javascript from",a);var c=document.createElement("script");c.type="text/javascript";c.src=a;c.onload=b;document.getElementsByTagName("head")[0].appendChild(c)}};
Spinderella.prototype={processConnection:function(){Spinderella.log("-> processConnection");this.channels&&this.channels.length>0&&this.subscribe(this.channels);this.identifier&&this.identify(this.identifier)},processDisconnection:function(){Spinderella.log("-> processDisconnection")},receiveData:function(a){Spinderella.log("<<",a);this.buffer+=a;if(this.buffer.indexOf("\r\n")>=0){a=this.buffer.split("\r\n");this.buffer=a.pop()||"";for(var b=0;b<a.length;b++)this.receiveMessage(a[b])}},receiveMessage:function(a){Spinderella.log("Got raw message:",
a);if((a=JSON.parse(a))&&a.action){Spinderella.log("Handling action:",a.action);this.handleAction(a.action,a.data||{})}},handleAction:function(a,b){switch(a){case "ping":Spinderella.log("Oh noes! ping time");this.performAction("pong");break;case "receive_message":this.onMessage(b.message,b.type,b);break}},performAction:function(a,b){Spinderella.log("Performing action with name =",a,"and data =",b);b||(b={});a=JSON.stringify({action:a,payload:b});Spinderella.log(">>",a);this.socket.send(a+"\r\n")},
subscribe:function(a){for(var b=0;b<a.length;b++){var c=a[b];this.channels.indexOf(c)<0&&this.channels.push(c)}Spinderella.log("Subscribing to channels: ",a);this.performAction("subscribe",{channels:a})},unsubscribe:function(a){for(var b=0;b<a.length;b++){var c=this.channels.indexOf(a[b]);c>=0&&this.channels.remove(c)}Spinderella.log("Unsubscribing from",a);this.performAction("unsubscribe",{channels:a})},identify:function(a){Spinderella.log("Identifying as",a);this.performAction("identify",{identifier:a})}};
Spinderella.Mock=function(){this.client=new Spinderella;this.client.socket=this};Spinderella.Mock.isUseable=function(){return true};Spinderella.Mock.implementationName="Mock";Spinderella.Mock.prototype={onMessage:function(){Spinderella.log("Adding onMessage callback")},connect:function(){Spinderella.log("Mock connected.")},onDisconnect:function(){Spinderella.log("Mock disconnected.")},send:function(a){Spinderella.log("Mock is sending data:",a)}};
Spinderella.Orbited=function(a,b,c,d,e){this.client=new Spinderella(a,b,c,d,e);this.client.socket=this};Spinderella.Orbited.isUseable=function(){return Spinderella.Orbited.javascriptURL!==null};Spinderella.Orbited.javascriptURL=null;Spinderella.Orbited.orbitedHost=null;Spinderella.Orbited.orbitedPort=null;Spinderella.Orbited.implementationName="Orbited";
Spinderella.Orbited.prototype={reconnectOn:function(){return[Orbited.Errors.RemoteConnectionFailed,Orbited.Errors.UserConnectionReset,Orbited.Statuses.ServerClosedConnection]},onMessage:function(a){this.client.onMessage=a},connect:function(a){var b=this,c=this.client,d=function(){if(Spinderella.Orbited.orbitedHost)Orbited.settings.hostname=Spinderella.Orbited.orbitedHost;if(Spinderella.Orbited.orbitedPort)Orbited.settings.port=Spinderella.Orbited.orbitedPort;b.socket=new Orbited.TCPSocket;if(typeof a!=
"function")a=function(){};b.socket.onread=function(e){c.receiveData(e)};b.socket.onopen=function(){c.processConnection();a()};b.socket.onclose=function(e){b.onDisconnect(e)};b.socket.open(c.host,c.port)};typeof Orbited!="undefined"?d():Spinderella.Util.loadJS(Spinderella.Orbited.javascriptURL,d)},onDisconnect:function(a){this.client.processDisconnection();if(this.reconnectOn().indexOf(a)>=0){var b=this;setTimeout(function(){b.connect()},5E3)}},send:function(a){this.socket.send(a)}};
Spinderella.JSSocket=function(a,b,c,d,e){this.client=new Spinderella(a,b,c,d,e);this.client.socket=this};Spinderella.JSSocket.flashURL=null;Spinderella.JSSocket.javascriptURL=null;Spinderella.JSSocket.implementationName="JSSocket";
Spinderella.JSSocket.isUseable=function(){if(Spinderella.JSSocket.flashURL==null||Spinderella.JSSocket.javascriptURL==null)return false;Spinderella.log("Checking for Flash");var a=navigator;return a.mimeTypes?a.mimeTypes["application/x-shockwave-flash"]!==undefined:a.plugins?a.plugins["Shockwave Flash"]!==undefined:false};
Spinderella.JSSocket.prototype={connect:function(a){Spinderella.log("Connecting via flash");var b=this,c=this.client,d=function(){JSSocket.swf=Spinderella.JSSocket.flashURL;Spinderella.log("Set JSSocket swf to",JSSocket.swf);JSSocket.logger=function(){Spinderella.log.apply(Spinderella,arguments)};Spinderella.log("Created socket and setting callbacks");if(typeof a!="function")a=function(){};b.socket=JSSocket.connect(c.host,c.port,function(e){e.onData(function(f){c.receiveData(f)});e.onOpen(function(){c.processConnection();
a()});e.onClose(function(){c.processDisconnection()})})};if(typeof JSSocket=="undefined"){Spinderella.log("Lazy loading JSSocket");Spinderella.Util.loadJS(Spinderella.JSSocket.javascriptURL,d)}else d()},send:function(a){this.socket.send(a)},onMessage:function(a){this.client.onMessage=a}};
Spinderella.WebSocket=function(a,b,c,d,e){this.client=new Spinderella(a,b,c,d,e);this.resourceURL="ws://"+a;if(b!=80)this.resourceURL+=":"+b;this.resourceURL+="/spinderella";Spinderella.log("WebSocket uses",this.resourceURL);this.client.socket=this};Spinderella.WebSocket.isUseable=function(){return typeof WebSocket!="undefined"};Spinderella.WebSocket.implementationName="WebSocket";
Spinderella.WebSocket.prototype={onMessage:function(a){this.client.onMessage=a},connect:function(a){Spinderella.log("Creating websocket");this.socket=new WebSocket(this.resourceURL);var b=this.client,c=this;Spinderella.log("Setting callbacks");if(typeof a!="function")a=function(){};this.socket.onmessage=function(d){b.receiveData(d.data+"\r\n")};this.socket.onopen=function(){b.processConnection();a()};this.socket.onclose=function(){c.onDisconnect()}},onDisconnect:function(){Spinderella.log("Handling websocket disconnection");
this.client.processDisconnection()},send:function(a){this.socket.send(a)}};Spinderella.Implementations=[Spinderella.WebSocket,Spinderella.JSSocket,Spinderella.Orbited,Spinderella.Mock];Spinderella.getPreferredImplementation=function(){for(var a,b=0;b<Spinderella.Implementations.length;b++){a=Spinderella.Implementations[b];Spinderella.log("Checking if",a.implementationName,"is useable");if(a.isUseable&&a.isUseable()){Spinderella.log("Using",a.implementationName);return a}}};
Spinderella.create=function(a,b,c,d,e){var f=Spinderella.getPreferredImplementation();if(typeof b=="number")b=b;else switch(f){case Spinderella.WebSocket:b=b.websocket;break;default:b=b.base;break}Spinderella.log("Connection to",a,b);return new f(a,b,c,d,e)};
